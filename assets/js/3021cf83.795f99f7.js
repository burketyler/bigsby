"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[538],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),g=a,f=d["".concat(l,".").concat(g)]||d[g]||u[g]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2418:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var r=n(3117),a=n(102),i=(n(7294),n(3905)),o=["components"],s={id:"getting-started"},l="Getting started",c={unversionedId:"getting-started",id:"getting-started",title:"Getting started",description:"This getting started guide will show you all you need to know in order to create a simple",source:"@site/docs/getting-started.mdx",sourceDirName:".",slug:"/getting-started",permalink:"/bigsby/docs/getting-started",tags:[],version:"current",frontMatter:{id:"getting-started"},sidebar:"docs",previous:{title:"Setup",permalink:"/bigsby/docs/setup"},next:{title:"Configuration",permalink:"/bigsby/docs/usage/configuration"}},p={},u=[{value:"Pre-requisites",id:"pre-requisites",level:3},{value:"Step 1: Create a Bigsby instance",id:"step-1-create-a-bigsby-instance",level:2},{value:"Step 2: Define a handler class",id:"step-2-define-a-handler-class",level:2},{value:"Step 3: Create handler function",id:"step-3-create-handler-function",level:2}],d={toc:u};function g(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-started"},"Getting started"),(0,i.kt)("p",null,"This getting started guide will show you all you need to know in order to create a simple\nAPI Gateway triggered AWS Lambda function using the Bigsby library."),(0,i.kt)("h3",{id:"pre-requisites"},"Pre-requisites"),(0,i.kt)("p",null,"If you haven't already, please complete the steps in ",(0,i.kt)("a",{parentName:"p",href:"/bigsby/docs/setup"},"setup"),"."),(0,i.kt)("h2",{id:"step-1-create-a-bigsby-instance"},"Step 1: Create a Bigsby instance"),(0,i.kt)("p",null,"The main purpose of the Bigsby instance is to act as a factory for handler functions.\nIt contains configuration that will be applied to each handler created by the instance,\nand its own isolated and unique dependency\n",(0,i.kt)("a",{parentName:"p",href:"https://burketyler.github.io/ts-injection/docs/usage#creating-an-injection-container"},"injection container"),"."),(0,i.kt)("p",null,"Defining an instance is as simple as creating a new Bigsby class. If your app consists of\nfunctions that require vastly different configuration, e.g. public vs private APIs, you can\ncreate as many Bigsby instances as required to cover each grouping of functions."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const bigsby = new Bigsby();\n")),(0,i.kt)("p",null,"It's common that you will need to add configuration applicable to each handler in your\napplication, this can be defined as a constructor argument to the instance, or at any point\nafter initialization. See ",(0,i.kt)("a",{parentName:"p",href:"/bigsby/docs/usage/configuration"},"configuration")," for more information."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'const bigsby = new Bigsby({\n  api: {\n    request: {\n      auth: authenticateRequest,\n    },\n    response: {\n      headers: {\n        "Access-Control-Allow-Origin": "*",\n      },\n    },\n  },\n});\n')),(0,i.kt)("h2",{id:"step-2-define-a-handler-class"},"Step 2: Define a handler class"),(0,i.kt)("p",null,"An ",(0,i.kt)("inlineCode",{parentName:"p"},"ApiHandler")," is used to handle events triggered via API Gateway v1 (rest) or v2 (http).\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"@Api")," decorator indicates to Bigsby that this class should be treated as an ApiHandler.\nThe class must implement the ApiHandler interface."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"@Api()\nclass ArnyQuotesHandler implements ApiHandler {\n  @Autowire(ArnyService)\n  private service!: ArnyService;\n\n  public async invoke(@Body() request: GetQuoteRequest): Promise<string> {\n    return this.service.getQuote(request.movie);\n  }\n}\n")),(0,i.kt)("p",null,"The above handler is injecting a service dependency via the ",(0,i.kt)("inlineCode",{parentName:"p"},"Autowire")," decorator\nand parsing a request object from the event payload using the ",(0,i.kt)("inlineCode",{parentName:"p"},"Body")," decorator. You can learn\nmore about ",(0,i.kt)("a",{parentName:"p",href:"/bigsby/docs/usage/dependency-injection"},"dependency injection")," and ",(0,i.kt)("a",{parentName:"p",href:"/bigsby/docs/usage/event-parsing"},"event parsing"),"\nin their respective sections."),(0,i.kt)("h2",{id:"step-3-create-handler-function"},"Step 3: Create handler function"),(0,i.kt)("p",null,"Using Bigsby, create and export your handler function by specifying the handler class.\nThe function will automatically inherit configuration specified at the instance level.\nYou can also define configuration that should be scoped to this handler only."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export default bigsby.createApiHandler(ArnyQuotesHandler, {\n  lifecycle: {\n    onError: [sendAlert],\n  },\n});\n")),(0,i.kt)("p",null,"Export the handler function, reference it in your lambda build chain, and you're ready to rock and roll \ud83c\udf7e"),(0,i.kt)("p",null,"The function returned by ",(0,i.kt)("inlineCode",{parentName:"p"},"createApiHandler")," is the ",(0,i.kt)("inlineCode",{parentName:"p"},"invoke")," method of the specified handler class,\nwrapped with all the bells and whistles of the Bigsby library including:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\ud83d\udc89 dependency injection"),(0,i.kt)("li",{parentName:"ul"},"\ud83d\udd0e parsing"),(0,i.kt)("li",{parentName:"ul"},"\ud83d\udc6e validation"),(0,i.kt)("li",{parentName:"ul"},"\ud83d\udd22 versioning"),(0,i.kt)("li",{parentName:"ul"},"\ud83d\udd10 authentication"),(0,i.kt)("li",{parentName:"ul"},"\ud83e\ude9d lifecycle")),(0,i.kt)("p",null,"Keep reading the next pages for a more in-depth explanation of the diverse and powerful features of Bigsby."))}g.isMDXComponent=!0}}]);